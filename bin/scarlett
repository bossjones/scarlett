#!/usr/bin/env python

import scarlett
from scarlett.constants import *
from scarlett.basics.voice import Voice
from scarlett.listener.gstlistener import *


def main():
    # Begin logging to standard out
    scarlett.set_stream_logger('scarlett')
    scarlett.log.debug(Fore.YELLOW + "Creating Voice Object")
    _voice = Voice()
    _voice.play('pi-listening')
    listenser = GstListener("gst")
    gtk.main()


if __name__ == "__main__":
    main()

# if __name__ == '__main__':
    # TODO: Add logic here to get config,
    # then determin which plugins and brain,
    # features to import
    #from pi.cells import *
    #from lib.monitors import *

    # DISABLED 10/8/2014, will figure out better way to do this # # TODO: REFACTOR THIS TO LATER ON ALLOW FOR IN PLACE PLUGINS
    # DISABLED 10/8/2014, will figure out better way to do this # extra_cells = os.environ['HOME'] + '/.scarlett/cells'
    # DISABLED 10/8/2014, will figure out better way to do this # if os.path.exists(extra_cells) == False:
    # DISABLED 10/8/2014, will figure out better way to do this #   os.makedirs(extra_cells)
    # DISABLED 10/8/2014, will figure out better way to do this # sys.path.append(extra_cells)
    # DISABLED 10/8/2014, will figure out better way to do this # cell_files = [os.path.basename(x)[:-3] for x in glob.glob(extra_cells + "/*.py")]
    # DISABLED 10/8/2014, will figure out better way to do this #
    # map(__import__, cell_files)

    # REFACTOR: listener = Listener(gobject, gst)
    # NEW ONE WILL BE
